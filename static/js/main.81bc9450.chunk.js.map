{"version":3,"sources":["App.js","index.js"],"names":["App","useState","preState","setPreState","curState","setCurState","input","setInput","operator","setOperator","total","setTotal","inputNum","e","includes","target","innerText","pre","useEffect","operatorType","equals","cal","String","parseFloat","className","value","displayType","thousandSeparator","onClick","charAt","substring","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81bc9450.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./App.css\"\r\nimport {useState, useEffect} from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nfunction App() {\r\n\r\nconst [preState, setPreState] = useState(\"\");\r\nconst [curState, setCurState] = useState(\"\");\r\nconst [input, setInput] = useState(\"0\");\r\nconst [operator, setOperator] = useState(null);\r\nconst [total, setTotal] = useState(false);\r\n\r\nconst inputNum = (e) => {\r\n    if (curState.includes(\".\") && e.target.innerText ===\".\" ) return;\r\n    if (total) {\r\n        setPreState(\"\")\r\n    }\r\n    curState \r\n    ? setCurState((pre) => pre + e.target.innerText) \r\n    : setCurState(e.target.innerText)\r\n    setTotal(false);\r\n};\r\n\r\nuseEffect(()=> {\r\n    setInput(curState);\r\n}, [curState]);\r\n\r\nuseEffect(()=> {\r\n    setInput(\"0\");\r\n}, []);\r\n\r\nconst operatorType = (e) => {\r\n    setTotal(false);\r\n    setOperator(e.target.innerText);\r\n    if(curState === \"\") return;\r\n    if(preState !== \"\") {\r\n        equals();\r\n    } else {\r\n        setPreState(curState);\r\n        setCurState(\"\");\r\n    }\r\n    \r\n};\r\n\r\nconst equals = (e) => {\r\n    if (e?.target.innerText === \"=\"){  \r\n    setTotal(true)\r\n};\r\n\r\nlet cal \r\nswitch (operator) {\r\n    case \"/\":\r\n        cal = String(parseFloat(preState) / parseFloat(curState)\r\n        );\r\n        break;\r\n        case \"+\":\r\n            cal = String(parseFloat(preState) + parseFloat(curState)\r\n            );\r\n        break;\r\n        case \"x\":\r\n        cal = String(parseFloat(preState) * parseFloat(curState)\r\n        );\r\n        break;\r\n        case \"-\":\r\n        cal = String(parseFloat(preState) - parseFloat(curState)\r\n        );\r\n        break;\r\n    default: \r\n    return\r\n\r\n}\r\n    setInput(\"\");\r\n    setPreState(cal);\r\n    setCurState(\"\");\r\n};\r\nconst minusPlus = () => {\r\n    if (curState.charAt(0) === \"-\") {\r\n        setCurState(curState.substring(1))\r\n    }else {\r\n        setCurState(\"-\"+curState)\r\n    }\r\n};\r\n\r\nconst percent = () => {\r\n    preState ? \r\n    setCurState(String(parseFloat(curState) / 100 * preState)) \r\n    : setCurState(String(parseFloat(curState) / 100)); \r\n}\r\n\r\nconst reset = () => {\r\n    setPreState(\"\");\r\n    setCurState(\"\");\r\n    setInput(\"0\");\r\n};\r\n    \r\nreturn (\r\n        <div className='container'>\r\n        <div className=\"wrapper\">\r\n        <div className='screen'>\r\n        {input !== \"\" || input === \"0\" ? (\r\n        <NumberFormat \r\n        value={input} \r\n        displayType={\"text\"}\r\n        thousandSeparator={true}\r\n        />\r\n        ) : (\r\n        <NumberFormat \r\n        value={preState}\r\n        displayType={\"text\"} \r\n        thousandSeparator={true}\r\n        />\r\n        )} \r\n        </div>\r\n        <div className=\"btn light-gray\" onClick={reset}>AC</div>\r\n        <div className=\"btn light-gray\" onClick={percent}>%</div>\r\n        <div className=\"btn light-gray\" onClick={minusPlus}>+/-</div>\r\n        <div className=\"btn orange\" onClick={operatorType}>/</div>\r\n        <div className=\"btn\" onClick={inputNum}>7</div>\r\n        <div className=\"btn\" onClick={inputNum}>8</div>\r\n        <div className=\"btn\" onClick={inputNum}>9</div>\r\n        <div className=\"btn orange\" onClick={operatorType}>x</div>\r\n        <div className=\"btn\" onClick={inputNum}>4</div>\r\n        <div className=\"btn\" onClick={inputNum}>5</div>\r\n        <div className=\"btn\" onClick={inputNum}>6</div>\r\n        <div className=\"btn orange\" onClick={operatorType}>+</div>\r\n        <div className=\"btn\" onClick={inputNum}>1</div>\r\n        <div className=\"btn\" onClick={inputNum}>2</div>\r\n        <div className=\"btn\" onClick={inputNum}>3</div>\r\n        <div className=\"btn orange\" onClick={operatorType}>-</div>\r\n        <div className=\"btn zero\" onClick={inputNum}>0</div>\r\n        <div className=\"btn\" onClick={inputNum}>.</div>\r\n        <div className=\"btn\" onClick={equals}>=</div>\r\n        </div>\r\n    </div>\r\n    \r\n    )\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}